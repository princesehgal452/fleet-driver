{"version":3,"sources":["webpack:///./src/DriverApp/pages/PostTruckPage/index.tsx"],"names":["formName","searchImageStyle","width","maxHeight","styles","theme","root","height","flexStretch","flexGrow","hideOverflow","overflow","TabStates","PostTruckPageContainer","inject","observer","props","personId","match","params","driverAppStore","drivers","userStore","FOUser","dispatchableDriver","find","driver","setState","setTruckErrors","truckStore","setError","setRALLoadsErrors","matchStore","RALLoadsStore","reset","postedTrucks","downloadResults","load","history","setSelectedMatch","setSelectedLoad","searchStore","redirectPath","matchId","loadId","id","push","collapsedPostForm","state","mixpanelTrack","MIXPANEL_EVENTS","ADVANCED_OPTIONS","Location","State","event","newValue","expiresOn","changeProp","change","minDate","toDate","isAfter","undefined","values","submitValues","pickup","coordinates","mixpanelSetSearchRALCitiesStates","refactorLocation","omit","dropoff","equipmentTypeList","split","radius","refactorRadius","perMileRate","refactorMileRate","availableDate","handlePostTruck","postQuery","enqueueSnackbarStore","snackbarStore","console","log","normalizePostQuery","pickupLocation","address","description","dropoffLocation","count","ReactGA","category","GA_TRACKING","CATEGORIES","DRIVER","action","ACTIONS","NEW_RAL","trackPageView","PAGEVIEWS","RAL","MIXPANEL_KEYS","PICKUP_LOCATION","DROPOFF_LOCATION","EQUIPMENT_LIST","sendNewRALRequest","variant","postMyTruck","value","currentTab","downloadCurrentCoordinatesAsync","lng","lat","geocoder","google","maps","Geocoder","geocode","location","results","length","formatted_address","geometry","REQUESTS","setDispatchableDriver","clearErrors","getMyTrucksHandler","handleSubmit","pristine","classes","isGeotab","configStore","loading","hideTracking","trackedMatchID","dispatcher","submitHandler","classNames","Boolean","validateDates","clearValues","handlePanelExpanded","setNearbyLocationRAL","handleTabChange","RALLOADS","RALLoadClickHandler","getCurrentCoordinates","get","Tutorial","RAL_PAGE","React","Component","PostTruckPageForm","reduxForm","form","touchOnChange","destroyOnUnmount","selector","formValueSelector","getInitialValues","defaultValues","Date","firebase","auth","currentUser","preferredPerMileRate","price","PostTruckPanelConnect","connect","initialValues","dispatch","bindActionCreators","withRouter","withStyles"],"mappings":"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","file":"app.ce88fa49447b297e8d22.hot-update.js","sourcesContent":["import React from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport omit from 'lodash/omit';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { change, formValueSelector, reduxForm } from 'redux-form';\r\nimport ReactGA from 'react-ga';\r\nimport classNames from 'classnames';\r\nimport { Theme, WithStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Grid, Tab, Tabs } from '@material-ui/core';\r\nimport PostTruckPanel from '../../components/PostTruckPanel';\r\nimport FOAppBarPage from '../../../components/FOAppBar/FOAppBarPage';\r\nimport { DriverAppStore } from '../../store/DriverAppStore';\r\nimport { IDriverAppStore } from '../../../models/dataStructures/IDriverAppStore';\r\nimport { GA_TRACKING, MIXPANEL_EVENTS, MIXPANEL_KEYS, Tutorial } from '../../../services/constants';\r\nimport { refactorLocation, refactorMileRate, refactorRadius, trackPageView } from '../../../utils/utility';\r\nimport { mixpanelSetSearchRALCitiesStates, mixpanelTrack } from '../../../services/FOMixpanel';\r\nimport RALLoads from './RALLoads';\r\nimport LoadRequests from './LoadRequests';\r\nimport { DriverTruck } from '../../../models/dataStructures/DriverTruck';\r\nimport TruckPageContent from './TruckPageContent';\r\nimport SettingLoadSVG from '../../../assets/images/svg/driver/setting-load.svg';\r\n\r\nimport './PostTruckPage.scss';\r\nimport Tutorials from '../../components/Tutorials';\r\n\r\n\r\nconst formName = 'postTruckForm';\r\n\r\nconst searchImageStyle = {\r\n  width: '100%',\r\n  maxHeight: '150px',\r\n};\r\n\r\nconst styles = (theme: Theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  flexStretch: {\r\n    flexGrow: 1,\r\n  },\r\n  hideOverflow: {\r\n    overflow: 'hidden',\r\n  },\r\n});\r\n\r\nenum TabStates {\r\n  REQUESTS,\r\n  RALLOADS,\r\n}\r\n\r\ninterface IPostTruckPageRouteProps {\r\n  personId: string;\r\n}\r\n\r\ninterface IPostTruckPageState {\r\n  dispatchableDriver: DriverTruck | null;\r\n  collapsedPostForm: boolean;\r\n  currentTab: TabStates;\r\n  minDate?: Date;\r\n}\r\n\r\ntype IPostTruckPage = IDriverAppStore & RouteComponentProps<IPostTruckPageRouteProps> & WithStyles<typeof styles>;\r\n\r\n@inject('driverAppStore')\r\n@observer\r\nclass PostTruckPageContainer extends React.Component<IPostTruckPage, IPostTruckPageState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dispatchableDriver: null,\r\n      collapsedPostForm: true,\r\n      currentTab: TabStates.REQUESTS,\r\n      minDate: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setDispatchableDriver();\r\n    this.clearErrors();\r\n    this.getMyTrucksHandler();\r\n  }\r\n\r\n  setDispatchableDriver = () => {\r\n    const { match: { params: { personId } }, driverAppStore } = this.props;\r\n    const { userStore: { FOUser: { drivers } } } = driverAppStore as DriverAppStore;\r\n    const dispatchableDriver = drivers?.find((driver) => driver.personId === personId);\r\n    if (dispatchableDriver) {\r\n      this.setState({ dispatchableDriver });\r\n    } else {\r\n      this.setState({ dispatchableDriver: null });\r\n    }\r\n  };\r\n\r\n  clearErrors = () => {\r\n    const { driverAppStore } = this.props;\r\n    const { truckStore: { setError: setTruckErrors }, matchStore: { RALLoadsStore: { setError: setRALLoadsErrors } } } = driverAppStore as DriverAppStore;\r\n    setTruckErrors(null);\r\n    setRALLoadsErrors(null);\r\n  };\r\n\r\n  clearValues = () => {\r\n    const { reset } = this.props;\r\n    reset();\r\n  };\r\n\r\n  getMyTrucksHandler = async () => {\r\n    const { driverAppStore, match: { params: { personId } } } = this.props;\r\n    const { truckStore: { postedTrucks } } = driverAppStore as DriverAppStore;\r\n    if (!personId) {\r\n      await postedTrucks.downloadResults();\r\n    }\r\n  };\r\n\r\n  RALLoadClickHandler = (load) => {\r\n    const { history, driverAppStore } = this.props;\r\n    const { matchStore: { setSelectedMatch }, searchStore: { setSelectedLoad } } = driverAppStore as DriverAppStore;\r\n    setSelectedMatch(null);\r\n    setSelectedLoad(load);\r\n    let redirectPath;\r\n    if (load.matchId === load.loadId) {\r\n      redirectPath = `/driver/load/${load.id}/detail`;\r\n    } else {\r\n      redirectPath = `/driver/match/${load.matchId}/detail`;\r\n    }\r\n    history.push(redirectPath);\r\n  };\r\n\r\n  handlePanelExpanded = () => {\r\n    const { collapsedPostForm } = this.state;\r\n    this.setState({\r\n      collapsedPostForm: !collapsedPostForm,\r\n    });\r\n    mixpanelTrack(MIXPANEL_EVENTS.ADVANCED_OPTIONS, {\r\n      Location: 'Request a Load',\r\n      State: collapsedPostForm ? 'Collapsed' : 'Expanded',\r\n    });\r\n  };\r\n\r\n  validateDates = (event, newValue) => {\r\n    const { expiresOn, change: changeProp } = this.props;\r\n    if (newValue) {\r\n      this.setState({ minDate: newValue.toDate() });\r\n      if (newValue.isAfter(expiresOn)) {\r\n        changeProp('expiresOn', null);\r\n      }\r\n    } else {\r\n      this.setState({ minDate: undefined });\r\n    }\r\n  };\r\n\r\n  submitHandler = (values) => {\r\n    let submitValues = { ...values };\r\n    if (submitValues.pickup && submitValues.pickup.coordinates) {\r\n      mixpanelSetSearchRALCitiesStates(submitValues.pickup);\r\n      submitValues.pickup = refactorLocation(submitValues.pickup);\r\n    } else {\r\n      submitValues = omit(submitValues, 'pickup');\r\n    }\r\n    if (submitValues.dropoff) {\r\n      mixpanelSetSearchRALCitiesStates(submitValues.dropoff);\r\n      submitValues.dropoff = refactorLocation(submitValues.dropoff);\r\n    } else {\r\n      submitValues = omit(submitValues, 'dropoff');\r\n    }\r\n    if (submitValues.equipmentTypeList) {\r\n      submitValues.equipmentTypeList = (typeof submitValues.equipmentTypeList === 'string')\r\n        ? submitValues.equipmentTypeList.split(',') : submitValues.equipmentTypeList;\r\n    } else {\r\n      submitValues = omit(submitValues, 'equipmentTypeList');\r\n    }\r\n    if (submitValues.radius) {\r\n      submitValues.radius = refactorRadius(submitValues.radius);\r\n    } else {\r\n      submitValues = omit(submitValues, 'radius');\r\n    }\r\n    if (submitValues.perMileRate) {\r\n      submitValues.perMileRate = refactorMileRate(submitValues.perMileRate);\r\n    } else {\r\n      submitValues = omit(submitValues, 'perMileRate');\r\n    }\r\n    if (!submitValues.availableDate) {\r\n      submitValues = omit(submitValues, 'availableDate');\r\n    }\r\n    if (!submitValues.expiresOn) {\r\n      submitValues = omit(submitValues, 'expiresOn');\r\n    }\r\n    this.handlePostTruck(submitValues);\r\n  };\r\n\r\n  handlePostTruck = async (postQuery) => {\r\n    const { dispatchableDriver } = this.state;\r\n    const { driverAppStore } = this.props;\r\n    const { truckStore, snackbarStore: { enqueueSnackbarStore } } = driverAppStore as DriverAppStore;\r\n    console.log('truck poage---------')\r\n    const normalizePostQuery = {\r\n      ...postQuery,\r\n      pickup: {\r\n        ...postQuery.pickupLocation,\r\n        address: postQuery.pickupLocation && postQuery.pickupLocation.description,\r\n      },\r\n      dropoff: {\r\n        ...postQuery.dropoffLocation,\r\n        address: postQuery.dropoffLocation && postQuery.dropoffLocation.description,\r\n      },\r\n      personId: dispatchableDriver?.personId,\r\n      count: 5\r\n    };\r\n    ReactGA.event({\r\n      category: GA_TRACKING.CATEGORIES.DRIVER,\r\n      action: GA_TRACKING.ACTIONS.NEW_RAL,\r\n    });\r\n    trackPageView(GA_TRACKING.PAGEVIEWS.NEW_RAL); // Required to make funnel reports in GA: REF BRF-635\r\n\r\n    mixpanelTrack(MIXPANEL_EVENTS.RAL, {\r\n      Location: 'RAL Page',\r\n      [MIXPANEL_KEYS.PICKUP_LOCATION]: postQuery.pickupLocation && postQuery.pickupLocation.description,\r\n      [MIXPANEL_KEYS.DROPOFF_LOCATION]: postQuery.dropoffLocation && postQuery.dropoffLocation.dropoffLocation,\r\n      [MIXPANEL_KEYS.EQUIPMENT_LIST]: postQuery.equipmentTypeList,\r\n    });\r\n    this.setState({\r\n      collapsedPostForm: true,\r\n    });\r\n    try {\r\n      if (dispatchableDriver) {\r\n        await dispatchableDriver.sendNewRALRequest(normalizePostQuery);\r\n        enqueueSnackbarStore('Successfully sent your request for loads', { variant: 'success' });\r\n      } else {\r\n        truckStore.postMyTruck(normalizePostQuery);\r\n        enqueueSnackbarStore('Successfully sent your request for loads', { variant: 'success' });\r\n      }\r\n    } catch (error) {\r\n    }\r\n  };\r\n\r\n  handleTabChange = (event, value) => {\r\n    this.setState({ currentTab: value });\r\n  };\r\n\r\n  setNearbyLocationRAL = async () => {\r\n    const { driverAppStore, change } = this.props;\r\n    const { userStore: { downloadCurrentCoordinatesAsync } } = driverAppStore as DriverAppStore;\r\n    try {\r\n      const coordinates = await downloadCurrentCoordinatesAsync();\r\n      if (coordinates.lng && coordinates.lat) {\r\n        const geocoder = new google.maps.Geocoder();\r\n        geocoder.geocode({ location: coordinates }, (results) => {\r\n          if (results && results.length) {\r\n            change('pickupLocation', {\r\n              description: results[0].formatted_address,\r\n              coordinates: {\r\n                lat: results[0].geometry.location.lat(),\r\n                lng: results[0].geometry.location.lng(),\r\n              },\r\n            });\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log('Could not fetch nearby location for RAL');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { driverAppStore, handleSubmit, pristine, classes } = this.props;\r\n    const {\r\n      truckStore, matchStore: { RALLoadsStore }, userStore, configStore: { isGeotab },\r\n    } = driverAppStore as DriverAppStore;\r\n    const { loading, postedTrucks } = truckStore;\r\n    const { hideTracking, trackedMatchID, dispatcher } = userStore;\r\n    const { collapsedPostForm, currentTab, dispatchableDriver, minDate } = this.state;\r\n\r\n    return (\r\n      <form className={classes.root} onSubmit={handleSubmit(this.submitHandler)}>\r\n        {dispatcher ? (\r\n          <Grid container className={classNames(classes.root, classes.hideOverflow)} direction='column' wrap='nowrap'>\r\n            <Grid item>\r\n              <FOAppBarPage\r\n                pageTitle='Request A Load'\r\n                renderTracking={Boolean(trackedMatchID && !hideTracking)}\r\n                showBackButton\r\n                secondaryControls={(\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      <PostTruckPanel\r\n                        pristine={pristine}\r\n                        minDate={minDate}\r\n                        loading={loading}\r\n                        dispatcher={dispatcher}\r\n                        collapsedSearchForm={collapsedPostForm}\r\n                        validateDates={this.validateDates}\r\n                        clearValues={this.clearValues}\r\n                        onExpanded={this.handlePanelExpanded}\r\n                        setNearbyLocationRAL={this.setNearbyLocationRAL}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n              />\r\n            </Grid>\r\n            <TruckPageContent loading={loading} driverTruck={dispatchableDriver} isGeotab={isGeotab} />\r\n          </Grid>\r\n        ) : (\r\n          <>\r\n            <FOAppBarPage\r\n              pageTitle='Request A Load'\r\n              renderTracking={Boolean(trackedMatchID && !hideTracking)}\r\n              secondaryControls={(\r\n                <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <Tabs\r\n                      value={currentTab}\r\n                      onChange={this.handleTabChange}\r\n                      variant='fullWidth'\r\n                    >\r\n                      <Tab label='Request a Load' value={TabStates.REQUESTS} />\r\n                      <Tab label='Available Loads' value={TabStates.RALLOADS} />\r\n                    </Tabs>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <PostTruckPanel\r\n                      minDate={minDate}\r\n                      loading={loading}\r\n                      pristine={pristine}\r\n                      collapsedSearchForm={collapsedPostForm}\r\n                      validateDates={this.validateDates}\r\n                      clearValues={this.clearValues}\r\n                      onExpanded={this.handlePanelExpanded}\r\n                      setNearbyLocationRAL={this.setNearbyLocationRAL}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            />\r\n            <Grid container className='driver-page-content'>\r\n              <Grid item xs={12}>\r\n                {currentTab === TabStates.REQUESTS && (\r\n                  <LoadRequests truckStore={truckStore} />\r\n                )}\r\n                {currentTab === TabStates.RALLOADS && (\r\n                  <RALLoads\r\n                    RALLoadStore={RALLoadsStore}\r\n                    userStore={userStore}\r\n                    onItemClick={this.RALLoadClickHandler}\r\n                    currentCoordinates={userStore.getCurrentCoordinates.get()}\r\n                  />\r\n                )}\r\n              </Grid>\r\n              {postedTrucks.results.length === 0\r\n              && (\r\n                <Grid item>\r\n                  <SettingLoadSVG className='default_truck_image' />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </>\r\n        )}\r\n        <Tutorials tutorialKey={Tutorial.RAL_PAGE} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PostTruckPageForm = reduxForm({\r\n  form: formName,\r\n  touchOnChange: true,\r\n  destroyOnUnmount: false,\r\n})(PostTruckPageContainer);\r\n\r\nconst selector = formValueSelector(formName);\r\nconst getInitialValues = () => {\r\n  let defaultValues = {\r\n    availableDate: new Date(),\r\n    radius: '50',\r\n    perMileRate: '2.5',\r\n    equipmentTypeList: '',\r\n  };\r\n  const { currentUser } = firebase.auth();\r\n  if (currentUser && currentUser['foUser']?.equipmentTypeList?.length > 0) {\r\n    defaultValues = {\r\n      ...defaultValues,\r\n      equipmentTypeList: currentUser['foUser'].equipmentTypeList,\r\n    };\r\n  }\r\n  if (currentUser && currentUser['foUser']?.preferredPerMileRate?.price) {\r\n    defaultValues = {\r\n      ...defaultValues,\r\n      perMileRate: currentUser['foUser'].preferredPerMileRate.price,\r\n    };\r\n  }\r\n  return defaultValues;\r\n};\r\n\r\nconst PostTruckPanelConnect = connect(\r\n  state => ({\r\n    initialValues: getInitialValues(),\r\n    availableDate: selector(state, 'availableDate'),\r\n    expiresOn: selector(state, 'expiresOn'),\r\n    pickupLocation: selector(state, 'pickupLocation'),\r\n  }),\r\n  dispatch => bindActionCreators({ change }, dispatch),\r\n)(withRouter(withStyles(styles)(PostTruckPageForm)));\r\n\r\nexport default PostTruckPanelConnect;\r\n"],"sourceRoot":""}